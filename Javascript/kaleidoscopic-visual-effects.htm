---
layout: default
title: Kaleidoscopic Visual Effects Page | Carbon Free Footprint Project
---
<div class="container-fluid">
	<div class="row-fluid">

<main>
<article>

<hgroup class="text-left">
	<h3>Kaleidoscopic Visual Effects Article</h3>
</hgroup>
	<hr class="green-groove" />

<p>
	<span>Welcome! This is the Kaleidoscopic Visual Effects page of the <b>Carbon Free Footprint</b> project.</span>
</p>

<p>
	<span>In Javascript, the progression of Blocks, to Functions, to Modules, to Libraries leans inevitably towards Named Functions.</span>
</p>
	<hr class="green-groove" />

<hgroup class="text-left">
	<h4>Simply Named Functions</h4>
</hgroup>
	<hr class="green-groove" />

<p>
	<span>Simply Named Functions are the backbone of a Javascript program.</span>
</p>

<pre>
<span>A. Declaring a Simply Named Function</span>
{% highlight javascript %}
function whazup(){
  window.alert("What's up, partner?");
}
{% endhighlight %}
<span lang="es" title="Sp. 'For Finish'">Finito!</span>&nbsp;...&nbsp;<i class="icon-large icon-flower"></i>
</pre>

<p>
	<span>Here, we see a function declaration NOT to a variable, but simply with a name 'whazup'.</span>
</p>
	<hr class="green-groove" />

<hgroup class="text-left">
	<h4>Function Expressions</h4>
</hgroup>
	<hr class="green-groove" />

<p>
<span>There are two (2) basic types of Function Expressions ...</span>
</p>

<ul>
<li>Named Function Expressions
<li>Anonymously Named Function Expressions
</ul>

<p>
	<span>An Anonymously Named Function Expression simply assigns a non-named ( anonymous ) function to a variable, as follows:</span>
</p>

<pre>
<span>B. Declaring and Assigning an Anonymous Function</span>
{% highlight javascript %}
var anonymous = function(){
  window.alert("Hey! I've got NO NAME!");
};
{% endhighlight %}
<span lang="es" title="Sp. 'For Finish'">Finito!</span>&nbsp;...&nbsp;<i class="icon-large icon-flower"></i>
</pre>

<p>
	<span>Whereas a Named Function Expression as the NAME suggests possesses a name when assigned to a variable, as follows:</span>
</p>

<pre>
<span>C. Declaring and Assigning a Named Function</span>
{% highlight javascript %}
var trump = function sux(){
  window.alert("Wow! Now I've been assigned to a variable 'trump' AND I have a name 'sux'!");
};
{% endhighlight %}
<span lang="es" title="Sp. 'For Finish'">Finito!</span>&nbsp;...&nbsp;<i class="icon-large icon-flower"></i>
</pre>

<p>
	<span><b>Note</b>.</span>
	<span>Because we are assigning the above un-named function <code>B.</code> to ...</span>
	<span>a variable, and because we are also assigning the above named function <code>C.</code> to ...</span>
	<span>a variable, as well, a semi-colon <code>};</code> is required to end the <code>var</code> statement for each example function referenced.</span>
</p>

<p>
	<span><em>Notice</em>, however, because we are NOT assigning, but rather simply declaring the initial Named Function <code>A.</code>, no semi-colon <code>}</code> is required to end the now apparent code block.</span>
</p>
	<hr class="green-groove" />

<hgroup class="text-left">
	<h4>Execution and Invokation</h4>
</hgroup>
	<hr class="green-groove" />

<p>
	<span>Functions can be started in one of two ways ...</span>
</p>

<ul>
	<li>Via invokation inside the function code block, and
	<li>Via execution outside the function code block.
</ul>

<pre>
<span>Invoking a Named Function</span>
{% highlight javascript %}
sux();
{% endhighlight %}
</pre>

<pre>
<span>Executing a Function Assigned to a Variable</span>
{% highlight javascript %}
trump();
{% endhighlight %}
<span lang="es" title="Sp. 'For Finish'">Finito!</span>&nbsp;...&nbsp;<i class="icon-large icon-flower"></i>
</pre>

<p>
	<span>More to come ...</span>
</p>
	
<footer class="page-footer center-block">
	<br />
	<p>
		<span><b>Source</b>:</span>
    	<a href="#" title="Click to Review Javascript Novice To Ninja by Darren Jones" target="_blank">Javascript Novice To Ninja</a>
	</p>

	<p>
		<span>See: <a href="#" title="Click to Review Javascript Novice To Ninja by Darren Jones" target="_blank">eBook</a> by Darren Jones</span>
	</p>

	<p>
		<span>Original Copyright 2014 Sitepoint Pty. Ltd</span>
		<br />
		<span>Collingwood, Australia</span>
	</p>
		<hr class="green-groove" />
		
	{% include footer.htm %}
</footer>

</article>
</main>

</div>
</div>
