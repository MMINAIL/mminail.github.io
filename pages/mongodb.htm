---
layout: default
title: MongoDB Page | Carbon Free Footprint Project
---
<hgroup class="leftalign">
	<h3>MongoDB Commands and Functions</h3>
</hgroup>
	<hr />
	
<p>
	<span>Welcome! This is the MongoDB Page of the <b>Carbon Free Footprint</b> project.</span>
</p>

<p>
	<span>To install the Mongo DB database software in Mac OSX using MacPorts visit this repo on GitHub ...</span>
	<a href="https://medmj.us/MongoMacPort" title="Clik to Jump To the Macports - MongoDB repo at GitHub" target="_blank">How To Install Mongo DB On Mac OSX With MacPorts via GitHub</a>
</p>
	
<p>
    <span>Because the Mongo Server (MS) shell is written in Javascript ...</span>
    <span>( the parenthesis ) are very important!</span>
</p>

<p>
    <span>Semi-colons are shown here and there throughout the code samples to illustrate a line ending.</span>
    <span>But, are not needed in the Javascript shell of MongoDB to execute a command line.</span>
</p>

<p>
    <span>What follows, are some important MongoDB Shell commands and functions for the fledgling reader to master.</span>
</p>

<p>
	<span>More to come ...</span>
</p>
	<hr class="green-groove" />

<h3>The Fun Begins Here</h3>

<p>
	<span>Here, a block of code for the MongoDB Javascript shell may be displayed and wordwrapped in real time</span>
    <span>via <a href="https://pages.github.com/" title="Clik to Jump To GitHub Pages" target="_blank">GitHub Pages</a></span>
    </span>when enclosed in a proper <a href="#" title="Clik to Jump To the Liquid repo at GitHub" target="_blank">Liquid</a> wrapper.</span>
</p>

<p>
    <span>Each subheading that follows represents a MongoDB command or an important function</span>
    <span>with a little bit of explanation tossed in as a Javascript comment to whet the whistle of the fledgling reader.</span>
</p>
	<hr class="green-groove" />

<h4>Mongo Chevron</h4>
<p>
	<span>Intro to the Chevron ...</span>
</p>

<p>
	<span>More to come ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where the Mongo Server (MS) accepts commands a.k.a the 'chevron'
>;
{% endhighlight %}
<!--
</code>
</pre>
-->

<h5>For Example ( <span lang="es" title="For Example">Por Ejemplo</span> ) ...</h5>
<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// Enter your command here at the 'chevron' prompt
>;
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Version</h4>
<p>
	<span>Intro to the 'version()' function ...</span>
</p>

<p>
	<span>More to come ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where db is the wake-up command to the (MS) to provide the current 'version'' of the Mongo Server (MS)
db.version();
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Help</h4>
<p>
	<span>Intro to the 'help()' function ...</span>
</p>

<p>
	<span>More to come ...</span>
</p>
<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where db is the wake-up command to the Mongo Server (MS) to provide general help
db.help();
{% endhighlight %}
<!--
</code>
</pre>
-->
<h5>For Example ( <span lang="es" title="For Example">Por Ejemplo</span> ) ...</h5>
<p>
	<span>(MS) will provide specific 'help', too ...</span>
	<span>Whenever a collection is specified within the 'help' function.</span>
</p>
<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where 'frame' is the name of a collection of documents within the current working database
db.frame.help();
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Stats</h4>
<p>
	<span>Intro to the 'stats()' function ...</span>
</p>

<p>
	<span>More to come ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where db is the wake-up command to the Mongo Server (MS) to provide stats
db.stats();
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Count</h4>
<p>
	<span>Intro to the 'count()' function ...</span>
</p>

<p>
	<span>The (MS) will provide a specific 'count' ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where 'frame' is the name of a collection of documents within the current working database
db.frame.count();
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Status</h4>
<p>
	<span>Intro to the 'serverStatus()' function ...</span>
</p>

<p>
	<span>More to come ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where db is the wake-up command to the (MS) to provide the current 'serverStatus' of the Mongo Server (MS)
db.serverStatus();
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Use</h4>
<p>
	<span>Intro to the MongoDB 'use' command ...</span>
</p>

<p>
	<span>More to come ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where the command 'use' asks the (MS) to switch to the database named 'cls'
// even if the database has not yet been created!
use cls;
{% endhighlight %}
<!--
</code>
</pre>
-->
<h5>For Example ( <span lang="es" title="For Example">Por Ejemplo</span> ) ...</h5>
<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// Response from the (MS) where the Mongo Server (MS) says switch is in effect to the database 'cls'
>switched to db cls
// then the 'chevron' prompt returns
>;
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo getCollectionNames()</h4>
<p>
	<span>Intro to the MongoDB 'getCollectionNames()' function ...</span>
</p>

<p>
    <span>Initially when performing this function on an empty 'collection', the prompt returns an empty array '[&nbsp;&nbsp;]', as follows:
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where the result is initially an empty array, the function getCollectionNames() returns the symbol '[ ]'
db.getCollectionNames();
[ ];
// then the 'chevron' prompt for the entering of the next command returns
>;
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Insert</h4>
<p>
	<span>Intro to the MongoDB 'insert()' function ...</span>
</p>

<p>
    <span>To insert a single document into the 'frame' collection ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where one or more 'key: value' sets of 'fields' within a single document are declared
db.frame.insert({name: 'Aurora', gender: 'f', weight: 450});
{% endhighlight %}
<!--
</code>
</pre>
-->
<h5>For Example ( <span lang="es" title="For Example">Por Ejemplo</span> ) ...</h5>
<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where the result is an single inserted document into the 'frame' collection
WriteResult({ "nInserted" : 1 })
// After the (MS) acknowledges the insert, the 'chevron' prompt for the entering of the next command returns
>;
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo getCollectionNames()</h4>
<p>
	<span>Revisiting the MongoDB 'getCollectionNames()' function ...</span>
</p>

<p>
	<span>After inserting the single document into the 'frame' collection ...</span>
	<span>When we pull the function 'getCollectionNames()' again</span>
	<span>from the arsenal of functions available in MongoDB</span>
	<span>we get an acknowledgement from the (MS) that a collection named 'frame' has been created, as follows:</span>
</p> 

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where a collection named 'frame' is now resident in the working database
db.getCollectionNames()
>[ "frame" ]
// then the 'chevron' prompt returns
>;
{% endhighlight %}
<!--
</code>
</pre>
-->

<p>
	<span>In effect, the collection was declared first, and then a document was inserted secondly into the working database.</span>
	<span>Consequently, all of the fields ( key - value pairs ) of the now inserted document are house'd within the collection 'frame' of the working database.</span>
</p>
	<hr class="green-groove" />

<h4>Mongo Find</h4>
<p>
	<span>Intro to the MongoDB 'find()' function ...</span>
</p>

<p>
	<span>More to come ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// back to the 'chevron'
>;
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Indexes</h4>
<p>
	<span>Intro to the MongoDB 'getIndexes()' function ...</span>
</p>

<p>
	<span>When we pull the function 'getIndexes()' from the arsenal of functions available in MongoDB ...</span>
</p>

<p>
	<span>More to come ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where 'frame' is a collection in the working database
db.frame.getIndexes();
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Remove</h4>
<p>
	<span>Intro to the MongoDB 'remove() function ...</span>
</p>

<p>
    <span>To wipe a collection clean ...</span>
    <span>Invoke the simplest of JSON objects ( which is the Empty Object ) denoted by a vacant set of curly braces '{&nbsp;&nbsp;}'.</span>
</p>
    <span>Here, the Empty Object '{&nbsp;&nbsp;}' matches the term 'All Documents'.</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// To remove all of the documents currently stored in the collection 'frame' invoke ...
db.frame.remove({ })
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />
	
<h4>Mongo Export</h4>
<p>
	<span>Intro to the MongoDB 'mongoexport' command ...<span>
</p>

<p>		
    </span>More to come ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where an export data command to a (.json) or a (.csv) file may be excuted
mongoexport;
{% endhighlight %}
<!--
</code>
</pre>
-->

<p>
    <span>JSON is the default format used by MongoDB when exporting data ( fields ) from a collection within a database.</span>
</p>

<p>
    <span>A data output in JSON format can be rendered by the (MS), as follows:</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where 'yourdata' is the name of a MongoDB database, and
// 'frame' is the name of a collection of documents within your MongoDB database
mongoexport --db yourdata --collection frame
{% endhighlight %}
<!--
</code>
</pre>
-->

<p>
    <span>MongoDB can also export data ( fields ) into the standard (.csv) format, as well.</span>
</p>

<p>
    <span>Here, the (MS) exports the (.csv) fields of name, weight, and gender from the 'frame' collection house'd within the database named 'yourdata'.</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
mongoexport --db yourdata \
--collection frame \
--csv --fields name,weight,gender
{% endhighlight %}
<!--
</code>
</pre>
-->
	<hr class="green-groove" />

<h4>Mongo Import</h4>

<p>
	<span>Intro to the 'mongoimport' command ...<span>
</p>

<p>		
    </span>More to come ...</span>
</p>

<!--
<pre>
<span>Highlighting MongoDB code w Rouge via liquid</span>
<code> -->
{% highlight javascript linenos %}
// where an import data command from a (.json) or a (.csv) file may be excuted
mongoimport;
{% endhighlight %}
<!--
</code>
</pre>
-->

<footer>
    <p>
        <span>The code snippets for this article have been extracted ( and, spruced up a little bit ) from the <a href="#" title="Click to Review the Little MongoDB eBook by Karl Seguin " target="_blank">Little MongoDB eBook</a> by Karl Seguin</span>
    </p>
	{% include footer.htm %}
</footer>
