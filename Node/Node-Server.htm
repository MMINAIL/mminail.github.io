---
layout: default
title: Node Server
---
<div itemscope itemtype="https://schema.org/" class="container-fluid">
	<div class="row-fluid">
		
{% include welcome-title-zoom-mminail.htm %}

<hgroup class="text-left">
	<h4>Fire Up</h4>
</hgroup>
	<hr class="green-groove" />

  <p class="lead">
    <span>How to start a node server on your local development machine ...</span>
  </p>

  <p>
    <span>Only six (6) lines of Javascript are required to create a local <em>node server</em> at your development machine's Terminal program.</span>
  </p>
    
  <p>
    <span>Follow the trail of logic from your local development machine after successfully loading the Node Package Manager (npm) and Node via the Node Version Manager, or <abbr class='oblique-text' title='Node Version Manager'>NVM</abbr> .</span>
  </p>
    <hr class="green-groove" />

<hgroup class='text-left'>
  <h5>Require Http</h5>
</hgroup>
  <hr class='green-groove' />
  
  <p>
    <span>More to come ...</span>
  </p>

  <p>
    <span>More to come ...</span>
  </p>

  <p>
	  <span>The module <b>http</b> is a required part of the Node server engine and can be found in the Node arsenal upon install.</span>
  </p>
	  <hr class="green-groove" />

  <p>
    <span><b>Note</b>.</span>
	  <span>Use the constant <b>const</b> keyword to create an immutable variable in ES6.</span>
  </p>
	  <hr class="green-groove" />

  <p>
    <span>The constant <b>http</b> now calls the <em>createServer</em> method on Line 2 below.</span>
  </p>

  <p>
    <span>Thus, obligating the callback objects of <b>request</b> and <b>response</b> to manage incoming rendering requests from the browser via the newly designated constant <b>server</b>.</span>
  </p>
	  <hr class="green-groove" />

  <p>
    <span>The <b>response</b> Object then on demand uses the <em>writeHead</em> method to open up a return message.</span>
  </p>

  <p>
    <span>The return message consists of a page header that includes both the status code and the content type of the return message.</span>
  </p>
	  <hr class="green-groove" />

  <p>
    <span>Next, <b>response</b> Object uses the <em>end</em> method to close the message and to render the given string to the browser window.</span>
  </p>
	  <hr class="green-groove" />

  <p>
    <span>The function parenthesis and internal arrow curly brace block are now closed in Line 5.</span>
  </p>
	  <hr class="green-groove" />

  <p>
    <span>Finally, the server is set to listen asynchronistically for incoming traffic requests on <b>port 8000</b> via the <em>listen</em>, as follows:</span>
  </p>

<pre>
<span>test-node.js</span>
<!-- <code> is used inline whereas <pre> is used for code blocks -->
{% highlight javascript linenos %}
const http = require('http')
const server = http.createServer((request, response) => {
response.writeHead(200, {'Content-Type': 'text/plain'})
response.end("Hello There Webpage!")
})
server.listen(8000)
{% endhighlight %}
<!-- </code>  -->
... Time to execute the code
</pre>
	<hr class="green-groove" />

<hgroup class='text-left'>
  <h4>Sub Title Name</h4>
</hgroup>
  <hr class='green-groove' />

  <p class="lead">
    <span>How to engage a node server with Node via Terminal ...</span>
  </p>
  
  <p>
    <span>The subject script file should now reside in your desktop folder in order to engage the newly created node server.</span>
  </p>
  
  <p>
	  <span>Now, type the following command into a Terminal window prompt '$' that is open to your desktop folder.</span>
  </p>

<!-- <pre>  -->
<!-- <code> is used inline whereas <pre> is used for code blocks -->
{% highlight javascript %}
$ node test-node.js
{% endhighlight %}
<!-- </code> -->
<!-- </pre>  -->

<p>
	<span>Then, open up a local browser window to <b>localhost:8000</b> and observe the immediate rendering.</span>
</p>

<p>
	<span><b>Note</b>.</span><span>To close the node server at the Terminal simply type 'Control-C' from your Mac OSX keyboard.</span>
</p>

<p>
	<span>More to come ...</span>
</p>
  <hr class="green-groove" />
    
{% include jquery-library.htm %}

{% include sources-and-uses.htm %}

{% include alt-footer-cash-me.htm %}

<script src='../js/jquery.min.js'></script>
<script src='../js/scripts/corresponding-javascript-file.js'></script>

  </div>
</div>
