---
layout: default
title: Object Destructure | MMINAIL
---
<div class="container-fluid">
	<div class="row-fluid">

<main>
<article>

<hgroup class="text-left">
	<h3>Object Destructure</h3>
</hgroup>
	<hr class="green-groove" />

<p class="lead">
	<span>Welcome! This is the Object Destructure page of the <abbr class='oblique-text' title='Medical Marijuana Initiative of North America - International Limited, an Arizona Benefit Corporation'>MMINAIL</abbr>.</span>
</p>
	<hr class="green-groove" />

<hgroup class="text-left">
	<h4>How To Destructure An Object - <br />In Angular js to Angular 2 to Angular 4 - <br /> In Mac Os Sierra</h4>
</hgroup>
	<hr class="green-groove" />

<p>
  <span><a href='http://es6-features.org/#Constants' title='Click To Review The New Features of EcmaScript 6' target='_blank'>ES6</a> gives the astute programmer a pathway to the extraction of values from data stored in objects, and then allows the assigning of those extracted values to variables.</span>
</p>

<pre class='flex-box'>
<p>
<span>Given the Following Object ...</span>
</p>
{% highlight html %}
const obj = {
	first: noah,
	age: 128,
	last: dietrich
};
{% endhighlight %}
<p>
<span>How may we extract the first and last values?</span>
</p>
</pre>
  <hr class='green-groove' />

<p>
  <span><b>Note</b>.</span>
  <span>In ES6, though the constant (const) pointer is immutable, an object pointed to is NOT!</span>
</p>
  <hr class='green-groove' />

<hgroup class='text-left'>
  <h4>Goal</h4>
</hgroup>
  <hr class='green-groove' />

<p>
  <span>The goal of this exercise is to extract the first 'value' and the last 'value' of the constant (const) object (obj), as follows:</span>
</p>
  <hr class='green-groove' />

<pre class='flex-box'>
<p>
<span>From the ...</span>
</p>
{% highlight html %}
const {
	first: f,
	last: l
} = obj;

console.log(f);
console.log(l);
{% endhighlight %}
</pre>
<p>
<span>To the ...</span>
</p>
  <hr class='green-groove' />

<p>
  <span>Notice the pattern we have developed between the curly braces {...}.</span>
</p>

<p>
  <span>We are telling the compiler to extract the first 'value' of the constant (const) object (obj) and simultaneously assign the 'value' to the variable f.</span>
</p>

<p>
  <span>Secondly, we are telling the compiler to extract the last 'value' of the constant (const) object (obj) and simultaneously assign the 'value' to the variable l.</span>
</p>

<p>
  <span>Next, we are displaying the result via the built-in console dot log function.</span>
</p>

<p>
  <span><b>Note</b>.</span>
  <span>The pattern developed between the curly braces {...} may be reduced to a single-line statement, as follows:</span>
</p>

<pre class='flex-box'>
<p>
<span>From the ...</span>
</p>
{% highlight html %}
const {first: f, last: l} = obj;</span>
{% endhighlight %}
</pre>
<p>
<span>To the ...</span>
</p>
  <hr class='green-groove' />

<p>
	<span>More to come ...</span>
</p>
	<hr class="green-groove" />

<p>
	<span><b>Note</b>.</span>
	<span>This page has explicit access to the local jQuery library as well as a local complimentary working (<a href="../js/scripts/corresponding-javascript-file.js" title="Click To Review the complimentary Javascript file for this partitioned Worksheet" target="_blank">.js</a>) file.</span> 
</p>
	<hr class='green-groove' />

<footer class="page-footer center-block">
	<br />
	<p>
		<span><b>Source</b>:</span>
    	<a href="https://codecraft.tv/courses/angular/" title="Click to Review Angular 4 From Theory To Practice" target="_blank">Angular 4 From Theory To Practice</a>
	</p>

	<p>
		<span>See: <a href="https://astore.amazon.com/cannabuds-2011-20/detail/B01N9S0CZN" title="Click to Review Angular 4 From Theory To Practice" target="_blank">eBook</a>
		<span>by</span>
		<a href="https://www.udemy.com/user/asimhussain/" title="Click to Visit the Udemy account of Asim Hussain" target="_blank">Asim Hussain</a>
	</p>
		<hr class="green-groove" />
	
	{% include footer.htm %}
</footer>

</article>
</main>

</div>
</div>

<script src='../js/jquery.min.js'></script>
<script src='../js/scripts/corresponding-javascript-file.js'></script>